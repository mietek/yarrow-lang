<P>
Variables can also be notated as OPERATORS, consisting of a sequence of the
following characters:<BR>
<CODE>+ &lt; &gt; / \  &amp; ! $ % ^ ~ | @ ; = [ ] - _ ' 0..9</CODE><BR>
They may not start with a digit, underline or apostroph either.
The single backslash '\', the arrow '-&gt;', the single bar '|'
and the single at '@' are reserved.
So '-&gt;@' is scanned as one infix operator, and not as the
symbols arrow and at!
</P>

<P>
An operator must be used infix. Sometimes you wish to use it in 
a prefix-way, or without two arguments. Then you have to enclose 
the operator in parentheses. Some examples:<BR>
<CODE>
Var (+) : Nat -&gt; Nat -&gt; Nat<BR>
Def double := \x:Nat. x+x<BR>
Def S := (+) one<BR>
</CODE>
</P>

<P>
An infix operator binds weaker than application, but stronger 
than -&gt;. For information concerning associativity and precedence 
between operators see
<A HREF ="#Infix"><CODE>Infix</CODE></A>,
<A HREF ="#InfixL"><CODE>InfixL</CODE></A> and
<A HREF ="#InfixR"><CODE>InfixR</CODE></A>.
This infix system is quite similar to that 
used in the functional programming languages Gofer and Haskell.
</P>

